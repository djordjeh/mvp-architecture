apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "djordjeh.architecture.mvp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }

    // debug variants uses the same source dir as release
    sourceSets {
        debug.java.srcDir 'src/release/java'
        String sharedTestDir = 'src/sharedTest/java'
        test.java.srcDir sharedTestDir
        androidTest.java.srcDir sharedTestDir
    }

    testOptions.unitTests.includeAndroidResources = true
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$project.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$project.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$project.daggerVersion"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofitVersion"

    // SQLite
    implementation "com.squareup.sqlbrite3:sqlbrite:$project.sqlbriteVersion"
    implementation "androidx.sqlite:sqlite-framework:$project.dbFrameworkVersion"

    // Dependencies for local unit tests

    // Android Testing Support Library's runner and rules
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation "org.mockito:mockito-core:$project.mockitoVersion"

    // AndroidJUnitRunner and JUnit Rules
    testImplementation 'androidx.test:runner:1.1.1'
    testImplementation 'androidx.test:rules:1.1.1'

    // Assertions
    testImplementation 'androidx.test.ext:junit:1.1.0'
    testImplementation "androidx.test.ext:truth:1.1.0"

    // Espresso dependencies
    testImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    testImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'


    // Android UI Testing
    // Core library
    androidTestImplementation 'androidx.test:core-ktx:1.1.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.0'
    androidTestImplementation 'androidx.test.ext:truth:1.1.0'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'

    androidTestImplementation "com.google.dagger:dagger:$project.daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$project.daggerVersion"

    // Mockito
    androidTestImplementation "org.mockito:mockito-android:2.19.0"
}
repositories {
    mavenCentral()
}